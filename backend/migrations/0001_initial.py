# Generated by Django 4.0.2 on 2022-02-14 14:49

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('phone_number', models.CharField(max_length=11, unique=True, verbose_name='phone number')),
                ('gender', models.CharField(choices=[('男', '男性'), ('女', '女性')], default='男', max_length=10)),
                ('is_superadmin', models.BooleanField(default=False, verbose_name='is_superadmin')),
                ('is_active', models.BooleanField(default=True, verbose_name='is_active')),
                ('is_staff', models.BooleanField(default=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
            },
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('context', models.CharField(max_length=255, verbose_name='comment context')),
                ('likes', models.IntegerField(verbose_name='the like')),
            ],
        ),
        migrations.CreateModel(
            name='Course',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(choices=[('太极', 'taiji'), ('瑜伽', 'yujia')], max_length=255, verbose_name='course name')),
                ('rating', models.IntegerField(verbose_name='course rating')),
                ('assessment', models.FloatField(verbose_name='course assessment')),
                ('during_time', models.IntegerField(verbose_name='during time')),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=30, verbose_name='user name')),
                ('avatar', models.FileField(upload_to='', verbose_name='avatar')),
                ('height', models.IntegerField(verbose_name='your height')),
                ('weight', models.IntegerField(verbose_name='your weight')),
                ('birthday', models.DateField(verbose_name='your birthday')),
                ('idcard_number', models.CharField(blank=True, max_length=18, verbose_name='ID card')),
                ('hobbies', models.CharField(choices=[('太极', 'taiji'), ('瑜伽', 'yoga')], max_length=20, verbose_name='your hobbies')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='account')),
            ],
        ),
        migrations.CreateModel(
            name='User2Course',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('course', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='backend.course')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='backend.user')),
            ],
        ),
    ]
